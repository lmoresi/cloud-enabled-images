## =============================================================
##
## The base image has jupyterhub installed and runs as the
## default hub user "jovyan" so it is the bare
## minimum to be compatible with binder and other jupyterhub
## cloud services - compare this to the juypyterhub/singleuser image
##
## To this we add the relevant lab extensions that cloud users
## may choose to activate depending on circumstances.
##
## For deployment we then need two things: configurations for any
## plugins that need secure keys, specific defaults etc, and content
##
## =============================================================

FROM underworldcode/petsc4py:3.11.2-jupyterhub

USER root

## This has probably already been done. Use || true to
## ignore errors related to that fact

RUN addgroup jovyan  || true
RUN usermod -a -G jovyan jovyan || true

## =============================================================
## In jupyterhub environments we do not want to have anything in
## /home/jovyan at build time that we might want at run time as
## this is usually clobbered. We install various extensions
## to jupyter and have their configuration be in /user_data by
## default. This directory is also available for other user content
## =============================================================

RUN mkdir -p /user_data
RUN chmod +rx /user_data && chown -R jovyan:jovyan /user_data

WORKDIR  /user_data/

ADD --chown=jovyan:jovyan  Docker/Kub-JHub/README.md README.md

ENV JUPYTERLAB_DIR=/user_data/jupyterlab
RUN pip install jupyterlab --upgrade
RUN pip install jupyter-server-proxy
RUN jupyter serverextension enable --sys-prefix jupyter_server_proxy
RUN jupyter labextension install @jupyterlab/hub-extension

## Github Extension for Jupyter Lab (leave disabled)
RUN pip install jupyterlab_github --upgrade
RUN jupyter labextension install @jupyterlab/github
RUN jupyter serverextension disable jupyterlab_github

## Git (read/write) extension for jupyterlab and add the required server extension
## ---
## This should be temporary - waiting for the official build to
## be updated on the npm repo

# RUN jupyter labextension install @jupyterlab/git
RUN mkdir -p /usr/local/src
WORKDIR /usr/local/src
RUN git clone https://github.com/jupyterlab/jupyterlab-git.git && \
    cd jupyterlab-git && \
    npm install && \
    npm run build && \
    jupyter-labextension link . && \
    npm run build
WORKDIR  /user_data/
RUN jupyter-labextension disable @jupyterlab/git
## ---
RUN pip install --upgrade jupyterlab-git
RUN jupyter-serverextension enable --py jupyterlab_git --sys-prefix

## Google drive labextension (leave disabled)
RUN jupyter labextension install @jupyterlab/google-drive
RUN jupyter labextension disable @jupyterlab/google-drive
RUN jupyter labextension install @jupyterlab/hub-extension

RUN jupyter-lab build

RUN pip install cloudstor

# This kills the markdown (etc) editor but allows it to be reenabled from the running terminal
# by setting open permissions for the default jupyterlab installation location

RUN jupyter-labextension disable @jupyterlab/fileeditor-extension
RUN chmod -R a+rw /user_data/jupyterlab

# expose notebook port and any other servers
EXPOSE 8888

# note we use xvfb which to mimic the X display for lavavu and
# other services that expect some X environment to be available

# script for xvfb-run.  all docker commands will effectively run under this via the entrypoint
RUN printf "#\041/bin/sh \n rm -f /tmp/.X99-lock && xvfb-run -s '-screen 0 1600x1200x16' \$@" > /usr/local/bin/xvfbrun.sh && \
                    chmod +x /usr/local/bin/xvfbrun.sh



ENTRYPOINT ["/usr/local/bin/xvfbrun.sh"]
CMD ["jupyter", "lab", "--ip=0.0.0.0", "--allow-root", "--NotebookApp.token=''", "--LabApp.default_url='/lab/tree/README.md'" ]

## =============================================================
## DEMO content ...
## =============================================================

# RUN pip install lavavu --upgrade
# RUN pip install imageio
# RUN pip install stripy
# RUN pip install litho1pt0
# RUN pip install git+https://github.com/jmansour/underworld2@pip


WORKDIR  /user_data


## =============================================================
# This ensures that any notebooks (etc) we add into the user_data space
# will appear in the default location if we run the container stand alone.
# In the normal way this will be nuked by the hub mount of /home/jovyan

USER jovyan
